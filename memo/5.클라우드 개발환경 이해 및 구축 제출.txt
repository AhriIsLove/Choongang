---------[문항1]---------
클래스의 접근 여부를 설정하기 위한 접근제어자로
private, protected, public, default중 하나이다.

protected로 지정된 클래스/변수/메소드는 
해당 클래스와 자식 클래스에서 접근이 가능하며
그외 클래스에서는 접근이 불가능하다.

---------[문항2]---------
Statement, PreparedStatement, CallableStatement는 JDBC에서 제공되는 클래스로
SQL쿼리를 위한 클래스들이다.

Statement는 일반적인 SQL문을 DB에 요청한다.

PreparedStatement는 SQL문에 '?'키워드를 이용해서 
SQL에 이용되는 값들을 분리하여 DB에 요청한다.
이로써 보안성이 향상되는 효과가 있다.

CallableStatement는 DB에 지정해둔 프로시저, 함수를 요청한다.

---------[문항3]---------
implements, extends는 클래스의 부모를 설정할 때 사용되는 명령어이다.

implements는 부모 인터페이스를 해당 클래스로 구현할때 사용된다.
EX) public class Child implements ParentInterface;

extends는 클래스/인터페이스를 동일한 클래스/인터페이스로 확장할 때 사용된다.
EX) public interface Child extends ParentInterface;
EX) public class Child extends ParentClass;

---------[문항4]---------
Runnable

---------[문항5]---------
캡슐화, 상속화, 추상화, 다형화

---------[문항6]---------
1 : boolean
2 : boolean

---------[문항7]---------
ArrayList<Movie> movieList = new ArrayList<Movie>();

---------[문항8]---------
1. Docker에서 Oracle Image를 실행한다.
1-1. Docker의 port를 확인한다.
2. SQLDeveloper에서 Docker의 port로 Oracle에 접근하는 계정을 생성한다.
3. Docker에서 JAVA 환경변수를 설정한다.
4. oBootTodoApi01을 gradle로 빌드한다.
4-1. jar 파일이 생성된다.
5. Dockerfile를 생성 및 설정한다.
5-1. jdk 버전 확인
5-2. jar 파일 확인
5-3. port 확인
5-4. entry 확인
6. Dockerfile를 참조하여 Docker를 빌드한다.
6-1. 생성된 image를 확인한다.
7. image를 실행한다.

